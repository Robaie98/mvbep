MVBEP Reports 
-------------
``MVBEP`` package allows generating three types of reports to analyze the performance and the output of the developed ``MVBEP`` object at several stages. 







Initialization Report
_____________________
The initialization report can be created after calling the function :py:meth:`~mvbep.mvbep.MVBEP.fit_training()`. The report is generated by using :py:meth:`~mvbep.mvbep.MVBEP.generate_initialization_summary()`. The purpose of this report is to check the input data and observe any unmet data sufficiency requirements.   


`Initialization Example Report <https://htmlpreview.github.io/?https://github.com/Robaie98/mvbep/blob/master/outputs/initilization_summary.html>`_




Development Report
___________________
The development report can be generated after running :py:meth:`~mvbep.mvbep.MVBEP.develop_mvbep()`. The report is generated by using :py:meth:`~mvbep.mvbep.MVBEP.generate_development_report()`. The report aims to provide an analysis of the development process and gauge the achieved prediction accuracy along with visuals to detect periods of irregular predictions.  

`Development Example Report <https://htmlpreview.github.io/?https://github.com/Robaie98/mvbep/blob/master/outputs/development_summary.html>`_





Quantification Report
_____________________
After finishing the ``MVBEP`` object development, post-retrofit data are used to quantify the achieved savings in the post-retrofit period.  The report can be generated by passing ``True`` for ``generate_summary`` when using :py:meth:`~mvbep.mvbep.MVBEP.predict_energy_consumption()` function. In case, the post-retrofit data failed to match the input data that was used for :py:meth:`~mvbep.mvbep.MVBEP.fit_training()` function, the quantification report will be generated regardless of the passed argument to highlight the unmet requirements. 


`Quantification Example Report <https://htmlpreview.github.io/?https://github.com/Robaie98/mvbep/blob/master/outputs/quantification_summary.html>`_